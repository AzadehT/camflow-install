version: 2.1
jobs:
    build:
        machine:
          image: ubuntu-2004:202010-01
        working_directory: ~/build
        steps:
          - checkout
          - run: 'sudo apt-get install -y apt-utils'
          - run: 'sudo apt-get install -y sudo'
          - run: 'sudo apt-get install -y software-properties-common'
          - run: 'sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test'
          - run: 'sudo apt-get update'
          - run: 'sudo apt-get update -qq'
          - run: 'sudo apt-get install -y g++-9 gcc-9 zstd'
          - run: 'sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9'
          - run: 'sudo update-alternatives --config gcc'
          - run: 'gcc --version'
          - run: 'g++ --version'
          - run: 'sudo apt-get install -y uncrustify rsync build-essential'
          - run: 'sudo apt-get install -y ruby python autoconf automake libtool'
          - run: 'sudo apt-get install -y libncurses5-dev libncursesw5-dev bc'
          - run: 'sudo apt-get install -y libssl-dev pkg-config zsh libelf-dev'
          - run: 'sudo apt-get install -y bison flex sqlite3 libsqlite3-dev'
          - run: 'sudo apt-get install -y liblz4-tool liblz4-dev'
          - run: 'wget http://archive.ubuntu.com/ubuntu/pool/universe/d/dwarves-dfsg/dwarves_1.17-1_amd64.deb'
          - run: 'sudo apt-get install -y ./dwarves_1.17-1_amd64.deb'
          - run: 'sudo apt-get install -y uthash-dev libinih-dev'
          - run: 'sudo apt-get install -y rpm alien'
          - run: 'sudo apt-get install --reinstall make'
          - run: 'git clone https://github.com/eclipse/paho.mqtt.c.git'
          - run: 'cd paho.mqtt.c && make && sudo make install'
          - run: 'make circle'
          - run: 'make all_rpm'
          - run: 'make deb_us'
  publish:
    executor: cloudsmith/default
    working_directory: ~/build
    steps:
      - checkout
      - attach_workspace:
          at: ~/build
      - cloudsmith/ensure-api-key
      - cloudsmith/install-cli
      - run: 'cd ./output && ls'
      - cloudsmith/publish:
          allow-republish: true
          cloudsmith-repository: camflow/camflow
          package-path: output/kernel-5*.x86_64.rpm
          package-format: rpm
          package-distribution: fedora/33
workflows:
  version: 2
  build-and-deploy:
      jobs:
          - build
          - publish
